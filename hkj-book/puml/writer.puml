@startuml writer

!include https://raw.githubusercontent.com/ncosta-ic/catppuccin-macchiato-plantuml-theme/main/theme.puml


hide empty members

   interface Monoid<W> {
     + W empty()
     + W combine(W x, W y)
   }



    class Writer<W, A> <<record>> {
        + Writer(W log, A value)
        __ Methods __
       + {static} Writer<W, A> create(W log, A value)
       + {static} Writer<W, A> value(Monoid<W> monoidW, A value)
       + {static} Writer<W, Unit> tell(W log)
       + Writer<W, B> map(Function<A, B> f)
       + Writer<W, B> flatMap(Monoid<W> monoidW, Function<A, Writer<W, B>> f)
       + A run()
       + W exec()
    }


    class WriterKindHelper {
      + {static} Writer<W, A> narrow(Kind<WriterKind.Witness<W>, A> kind)
      + {static} Kind<WriterKind.Witness<W>, A> widen(Writer<W, A> writer)
      + {static} Kind<WriterKind.Witness<W>, A> value(Monoid<W> monoidW, A value)
      + {static} Kind<WriterKind.Witness<W>, Unit> tell(W log)
      + {static} Writer<W, A> runWriter(Kind<WriterKind.Witness<W>, A> kind)
      + {static} A run(Kind<WriterKind.Witness<W>, A>, A> kind)
      + {static} W exec(Kind<WriterKind.Witness<W>, A>, A> kind)
    }

    class WriterFunctor<W> implements Functor<WriterKind.Witness<W>> {
       + Kind<WriterKind.Witness<W>, B> map(Function<A, B> f, Kind<WriterKind.Witness<W>, A> fa)
    }
    class WriterApplicative<W> extends WriterFunctor<W> implements Applicative<WriterKind.Witness<W>> {
       # monoidW: Monoid<W>
       + WriterApplicative(Monoid<W> monoidW)
       + Kind<WriterKind.Witness<W>, A> of(A value)
       + Kind<WriterKind.Witness<W>, B> ap(Kind<WriterKind.Witness<W>, Function<A, B>> ff, Kind<WriterKind.Witness<W>, A> fa)
    }
    class WriterMonad<W> extends WriterApplicative<W> implements Monad<WriterKind<W, A>> {
       + WriterMonad(Monoid<W> monoidW)
       + Kind<WriterKind.Witness<W>, A> flatMap(Function<A, Kind<WriterKind.Witness<W>, B>> f, Kind<WriterKind.Witness<W>, A> ma)
    }

' Dependencies
WriterApplicative *--> Monoid : uses >

WriterKindHelper ..> Writer : widens/narrows
WriterKindHelper ..> WriterKind : widens/narrows
WriterKindHelper ..> Monoid : uses for factories

WriterMonad ..> WriterKind : operates on Kind<WriterKind.Witness<W>, A>
WriterMonad ..> Writer : uses methods of
Writer ..> Monoid : uses for flatMap/value

@enduml