@startuml core_interfaces

!include https://raw.githubusercontent.com/ncosta-ic/catppuccin-macchiato-plantuml-theme/main/theme.puml


package "Defunctionalisation Pattern Details" {
    class KindUnwrapException

    package "For External Types (Optional etc)" {
        interface "OptionalKind<A>" as OptionalKindInterface extends Kind<OptionalKind.Witness, A> {
            class Witness {} ' Nested phantom Witness type
        }
        class "java.util.Optional<A>" as JavaOptional {}

        ' OptionalHolder is an internal implementation detail of OptionalKindHelper
        package "internal" {
            class "OptionalHolder<A>" as OptionalHolder implements OptionalKindInterface {
             + OptionalHolder(opt: java.util.Optional<A>)
            }
        }
        OptionalKindHelper ..> OptionalHolder : "creates / uses"
        OptionalKindHelper ..> JavaOptional : "widens / narrows"
        OptionalHolder ..> JavaOptional : "holds"

        class "OptionalKindHelper" as OptionalKindHelper {
            + {static} widen(opt: java.util.Optional<A>): Kind<OptionalKind.Witness, A>
            + {static} narrow(kind: Kind<OptionalKind.Witness, A>): java.util.Optional<A>
        }
        class "OptionalMonad" as OptionalMonad implements MonadError<OptionalKind.Witness, Unit> {
            ' Uses OptionalKindHelper
        }
        OptionalMonad ..> OptionalKindHelper : "uses"
    }

    package "For Library-Defined Types (Id, Maybe, IO, Transformers)" {
        interface "IdKind<A>" as IdKindInterface extends Kind<Id.Witness, A> {
            class Witness {} ' Nested phantom Witness type
        }
        ' Id<A> itself implements IdKind<A>
        class "Id<A>(value: A)" as IdRecord implements IdKindInterface {
        }
        IdRecord --|> IdKindInterface

        class "IdKindHelper" as IdKindHelper {
            + {static} widen(id: Id<A>): Kind<Id.Witness, A>
            + {static} narrow(kind: Kind<Id.Witness, A>): Id<A>
        }
        IdKindHelper ..> IdRecord : "casts to/from"

        class "IdentityMonad" as IdentityMonad implements Monad<Id.Witness> {
            ' Uses IdKindHelper
        }
        IdentityMonad ..> IdKindHelper : "uses"
    }
}
@enduml

