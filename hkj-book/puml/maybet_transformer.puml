@startuml maybet_transformer
!include https://raw.githubusercontent.com/ncosta-ic/catppuccin-macchiato-plantuml-theme/main/theme.puml

hide empty members



  interface MaybeTKind<F, A> extends Kind<MaybeTKind.Witness<F>, A> {
    + {static} class Witness<OUTER_F> << (W,lightblue) >>
  }
'  note right of MaybeTKind.Witness : Phantom type for HKT simulation.

  class "MaybeT<F, A>" implements MaybeTKind<F, A> {
    + value: Kind<F, Maybe<A>>
    --
    + {static} fromKind(Kind<F, Maybe<A>>): MaybeT<F, A>
    + {static} just(Monad<F> outerMonad, A a): MaybeT<F, A>
    + {static} nothing(Monad<F> outerMonad): MaybeT<F, A>
    + {static} fromMaybe(Monad<F> outerMonad, Maybe<A> maybe): MaybeT<F, A>
    + {static} liftF(Monad<F> outerMonad, Kind<F, A> fa): MaybeT<F, A>
    --
    + value(): Kind<F, Maybe<A>>
  }
  note left of "MaybeT<F, A>" : "Wraps a monadic value of Kind<F, Maybe<A>>."

  class MaybeTMonad<F> implements MonadError<MaybeTKind.Witness<F>, Unit> {
    - outerMonad: Monad<F>
    --
    + MaybeTMonad(Monad<F> outerMonad)
    --
    + of(A value): Kind<MaybeTKind.Witness<F>, A>
    + map(Function<A, B> f, Kind<MaybeTKind.Witness<F>, A> fa): Kind<MaybeTKind.Witness<F>, B>
    + ap(Kind<MaybeTKind.Witness<F>, Function<A, B>> ff, Kind<MaybeTKind.Witness<F>, A> fa): Kind<MaybeTKind.Witness<F>, B>
    + flatMap(Function<A, Kind<MaybeTKind.Witness<F>, B>> f, Kind<MaybeTKind.Witness<F>, A> ma): Kind<MaybeTKind.Witness<F>, B>
    + raiseError(Unit error): Kind<MaybeTKind.Witness<F>, A>
    + handleErrorWith(Kind<MaybeTKind.Witness<F>, A> ma, Function<Unit, Kind<MaybeTKind.Witness<F>, A>> handler): Kind<MaybeTKind.Witness<F>, A>
  }
  note right of MaybeTMonad : Provides MonadError instance for MaybeT.

  class MaybeTKindHelper << (H,lightgrey) >> {
    + {static} INVALID_KIND_NULL_MSG: String
    + {static} INVALID_KIND_TYPE_MSG: String
    --
    + {static} narrow(Kind<MaybeTKind.Witness<F>, A> kind): MaybeT<F, A>
    + {static} widen(MaybeT<F, A> maybeT): Kind<MaybeTKind.Witness<F>, A>
  }
  note left of MaybeTKindHelper : Utility for HKT widen / narrow.


' Relationships
MaybeT --> "value" Kind
MaybeT ..> Maybe : uses in value
MaybeT ..> Monad : uses in static methods

MaybeTMonad o--> "outerMonad" Monad
MaybeTMonad ..> MaybeTKindHelper : uses
MaybeTMonad ..> MaybeT : uses via KindHelper
MaybeTMonad ..> MaybeTKind.Witness : uses in signature
MaybeTMonad ..> Maybe : manipulates

MaybeTKindHelper ..> MaybeT : widen/narrow
MaybeTKindHelper ..> MaybeTKind.Witness : uses in signature


@enduml